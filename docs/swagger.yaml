definitions:
  controllers.StoreOrderInput:
    properties:
      buyer_id:
        type: integer
      product_id:
        type: integer
    type: object
  controllers.StoreProductInput:
    properties:
      description:
        type: string
      price:
        type: integer
      product_name:
        type: string
    type: object
  controllers.UpdateOrderInput:
    properties:
      product_id:
        type: integer
    type: object
  controllers.UpdateProductInput:
    properties:
      description:
        type: string
      price:
        type: integer
      product_name:
        type: string
    type: object
  models.Orders:
    properties:
      buyer_id:
        type: integer
      id:
        type: integer
      orderDate:
        type: string
      product:
        $ref: '#/definitions/models.Products'
      product_id:
        type: integer
      updatedAt:
        type: string
      user:
        $ref: '#/definitions/models.Users'
    type: object
  models.Products:
    properties:
      createdAt:
        type: string
      description:
        type: string
      id:
        type: integer
      price:
        type: integer
      product_name:
        type: string
      updatedAt:
        type: string
    type: object
  models.Users:
    properties:
      address:
        type: string
      createdAt:
        type: string
      fullName:
        type: string
      id:
        type: integer
      updatedAt:
        type: string
    type: object
info:
  contact: {}
  description: Mini E-commerce REST API Documentation
  title: Mini E-commerce REST API
  version: "0.1"
paths:
  /order:
    post:
      description: Store new Order
      parameters:
      - description: Order Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/controllers.StoreOrderInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Post Order
      tags:
      - Order
  /order/{id}:
    delete:
      description: Delete Order
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Delete Order
      tags:
      - Order
    get:
      description: Get Order by ID
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Orders'
      summary: Get Order by ID
      tags:
      - Order
    patch:
      description: Update Order
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      - description: Order data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/controllers.UpdateOrderInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Update Order
      tags:
      - Order
  /orders:
    get:
      description: Get list of all available Orders
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Orders'
            type: array
      summary: Get Orders
      tags:
      - Order
  /product:
    post:
      description: Create new Product
      parameters:
      - description: product data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/controllers.StoreProductInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Store Product
      tags:
      - Product
  /product/{id}:
    delete:
      description: Delete Product
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Delete Product
      tags:
      - Product
    get:
      description: Show Product by ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Products'
      summary: Get Product by id
      tags:
      - Product
    patch:
      description: Update Product
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      - description: Product data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/controllers.UpdateProductInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Update Product
      tags:
      - Product
  /products:
    get:
      description: Get list of all available Products
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Products'
            type: array
      summary: Get Products
      tags:
      - Product
swagger: "2.0"
